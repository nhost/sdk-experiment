openapi: "3.0.0"

components:
  schemas:
    SimpleObject:
      type: object
      description: "This is a simple object schema."
      properties:
        id:
          type: string
          description: "Unique identifier for the object."
          example: "abc123"
        active:
          type: boolean
          description: "Indicates if the object is active."
          example: true
        age:
          type: number
          description: "Age of the object in years."
          example: 5
        createdAt:
          type: string
          format: date-time
          description: "Timestamp when the file was created."
          example: "2023-01-15T12:34:56Z"
        metadata:
          type: object
          additionalProperties: true
          description: "Custom metadata associated with the file."
          example: { "alt": "Profile picture", "category": "avatar" }
        data:
          type: string
          format: binary
          description: "Base64 encoded data of the file."
        tags:
          type: array
          description: "List of tags associated with the object."
          items:
            type: string
            description: "Tags associated with the object."
            example: "tag1"
        parent:
          description: "Parent object reference."
          $ref: '#/components/schemas/SimpleObject'
        children:
          description: "List of child object references."
          type: array
          items:
            $ref: '#/components/schemas/SimpleObject'
        status:
          type: string
          description: "Status of the object."
          enum:
            - active
            - inactive
            - pending
          example: "active"
        nested:
          type: object
          properties:
            nestedId:
              type: string
              description: "Unique identifier for the nested object."
              example: "nested123"
            nestedData:
              type: string
              description: "Data associated with the nested object."
              example: "Nested data"
          required:
            - nestedId
      required:
        - id
        - active
        - age
        - createdAt
        - metadata
        - data
      additionalProperties: false
